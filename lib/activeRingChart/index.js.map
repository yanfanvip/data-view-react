{"version":3,"file":"index.js","sources":["../../src/components/activeRingChart/index.js"],"sourcesContent":["import React, { useRef, useState, useEffect, useMemo } from 'react'\n\nimport PropTypes from 'prop-types'\n\nimport classnames from 'classnames'\n\nimport Charts from '@jiaminghi/charts'\n\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\n\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\n\nimport DigitalFlop from '../digitalFlop'\n\nimport { co } from '../../util'\n\nimport './style.less'\n\nconst defaultConfig = {\n  /**\n   * @description Ring radius\n   * @type {String|Number}\n   * @default radius = '50%'\n   * @example radius = '50%' | 100\n   */\n  radius: '50%',\n  /**\n   * @description Active ring radius\n   * @type {String|Number}\n   * @default activeRadius = '55%'\n   * @example activeRadius = '55%' | 110\n   */\n  activeRadius: '55%',\n  /**\n   * @description Ring data\n   * @type {Array<Object>}\n   * @default data = [{ name: '', value: 0 }]\n   */\n  data: [{ name: '', value: 0 }],\n  /**\n   * @description Ring line width\n   * @type {Number}\n   * @default lineWidth = 20\n   */\n  lineWidth: 20,\n  /**\n   * @description Active time gap (ms)\n   * @type {Number}\n   * @default activeTimeGap = 3000\n   */\n  activeTimeGap: 3000,\n  /**\n   * @description Ring color (hex|rgb|rgba|color keywords)\n   * @type {Array<String>}\n   * @default color = [Charts Default Color]\n   * @example color = ['#000', 'rgb(0, 0, 0)', 'rgba(0, 0, 0, 1)', 'red']\n   */\n  color: [],\n  /**\n   * @description Digital flop style\n   * @type {Object}\n   */\n  digitalFlopStyle: {\n    fontSize: 25,\n    fill: '#fff'\n  },\n  /**\n   * @description Digital flop toFixed\n   * @type {Number}\n   */\n  digitalFlopToFixed: 0,\n  /**\n   * @description Digital flop unit\n   * @type {String}\n   */\n  digitalFlopUnit: '',\n  /**\n   * @description CRender animationCurve\n   * @type {String}\n   * @default animationCurve = 'easeOutCubic'\n   */\n  animationCurve: 'easeOutCubic',\n  /**\n   * @description CRender animationFrame\n   * @type {String}\n   * @default animationFrame = 50\n   */\n  animationFrame: 50,\n  /**\n   * @description showOriginValue\n   * @type {Boolean}\n   * @default showOriginValue = false\n   */\n  showOriginValue: false\n}\n\nconst ActiveRingChart = ({ config = {}, className, style }) => {\n  const [{ activeIndex, mergedConfig }, setState] = useState({\n    activeIndex: 0,\n    mergedConfig: null\n  })\n\n  const domRef = useRef(null)\n  const chartRef = useRef(null)\n\n  const digitalFlop = useMemo(() => {\n    if (!mergedConfig) return {}\n\n    const { digitalFlopStyle, digitalFlopToFixed, data, showOriginValue, digitalFlopUnit } = mergedConfig\n\n    const value = data.map(({ value }) => value)\n\n    let displayValue\n\n    if (showOriginValue) {\n      displayValue = value[activeIndex]\n    } else {\n      const sum = value.reduce((all, v) => all + v, 0)\n      const percent = parseFloat((value[activeIndex] / sum) * 100) || 0\n\n      displayValue = percent\n    }\n\n    return {\n      content: showOriginValue ? `{nt}${digitalFlopUnit}` : `{nt}${digitalFlopUnit || '%'}`,\n      number: [displayValue],\n      style: digitalFlopStyle,\n      toFixed: digitalFlopToFixed\n    }\n  }, [mergedConfig, activeIndex])\n\n  const ringName = useMemo(\n    () => (!mergedConfig ? '' : mergedConfig.data[activeIndex].name),\n    [mergedConfig, activeIndex]\n  )\n\n  const fontSize = useMemo(\n    () =>\n      !mergedConfig\n        ? {}\n        : { fontSize: `${mergedConfig.digitalFlopStyle.fontSize}px` },\n    [mergedConfig]\n  )\n\n  function getRingOption(mergedConfig) {\n    const radius = getRealRadius(mergedConfig)\n\n    const newMergedConfig = {\n      ...mergedConfig,\n      data: mergedConfig.data.map(item => ({ ...item, radius }))\n    }\n\n    return {\n      series: [\n        {\n          type: 'pie',\n          ...newMergedConfig,\n          outsideLabel: {\n            show: false\n          }\n        }\n      ],\n      color: newMergedConfig.color\n    }\n  }\n\n  function getRealRadius({ radius, activeRadius, lineWidth }, active = false) {\n    const maxRadius = Math.min(...chartRef.current.render.area) / 2\n\n    const halfLineWidth = lineWidth / 2\n\n    let realRadius = active ? activeRadius : radius\n\n    if (typeof realRadius !== 'number') {\n      realRadius = (parseInt(realRadius) / 100) * maxRadius\n    }\n\n    const insideRadius = realRadius - halfLineWidth\n    const outSideRadius = realRadius + halfLineWidth\n\n    return [insideRadius, outSideRadius]\n  }\n\n  function getOption(mergedConfig, activeIndex) {\n    const radius = getRealRadius(mergedConfig)\n    const active = getRealRadius(mergedConfig, true)\n\n    let option = getRingOption(mergedConfig)\n\n    return {\n      ...option,\n      series: option.series.reduce(\n        (prev, serie, index) =>\n          index !== 0\n            ? [...prev, serie]\n            : [\n              ...prev,\n              {\n                ...serie,\n                data: serie.data.map((item, i) => ({\n                  ...item,\n                  radius: i === activeIndex ? active : radius\n                }))\n              }\n            ],\n        []\n      )\n    }\n  }\n\n  useEffect(() => {\n    // 第一次时初始化\n    chartRef.current || (chartRef.current = new Charts(domRef.current))\n\n    const mergedConfig = deepMerge(deepClone(defaultConfig, true), config || {})\n\n    chartRef.current.setOption(getRingOption(mergedConfig), true)\n\n    let activeIndex = 0\n\n    function * loop() {\n      while (true) {\n        setState({ mergedConfig, activeIndex })\n\n        const option = getOption(mergedConfig, activeIndex)\n\n        chartRef.current.setOption(option, true)\n\n        const { activeTimeGap, data } = option.series[0]\n\n        yield new Promise(resolve => setTimeout(resolve, activeTimeGap))\n\n        activeIndex += 1\n\n        if (activeIndex >= data.length) {\n          activeIndex = 0\n        }\n      }\n    }\n\n    return co(loop).end\n  }, [config])\n\n  const classNames = useMemo(\n    () => classnames('dv-active-ring-chart', className),\n    [className]\n  )\n\n  return (\n    <div className={classNames} style={style}>\n      <div className='active-ring-chart-container' ref={domRef} />\n      <div className='active-ring-info'>\n        <DigitalFlop config={digitalFlop} />\n        <div className='active-ring-name' style={fontSize}>\n          {ringName}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nActiveRingChart.propTypes = {\n  config: PropTypes.object,\n  className: PropTypes.string,\n  style: PropTypes.object\n}\n\nexport default ActiveRingChart\n"],"names":["defaultConfig","radius","activeRadius","data","name","value","lineWidth","activeTimeGap","color","digitalFlopStyle","fontSize","fill","digitalFlopToFixed","digitalFlopUnit","animationCurve","animationFrame","showOriginValue","ActiveRingChart","config","className","style","useState","activeIndex","mergedConfig","setState","domRef","useRef","chartRef","digitalFlop","useMemo","map","displayValue","sum","reduce","all","v","percent","parseFloat","content","number","toFixed","ringName","getRingOption","getRealRadius","newMergedConfig","item","series","type","outsideLabel","show","active","maxRadius","Math","min","current","render","area","halfLineWidth","realRadius","parseInt","insideRadius","outSideRadius","getOption","option","prev","serie","index","i","useEffect","loop","Charts","deepMerge","deepClone","setOption","Promise","setTimeout","resolve","length","co","end","classNames","classnames","React","DigitalFlop","propTypes","PropTypes","object","string"],"mappings":"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"}