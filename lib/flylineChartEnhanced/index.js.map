{"version":3,"file":"index.js","sources":["../../src/components/flylineChartEnhanced/index.js"],"sourcesContent":["import React, { useEffect, useState, useRef, useCallback, useMemo, forwardRef } from 'react'\n\nimport PropTypes from 'prop-types'\n\nimport classnames from 'classnames'\n\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\n\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\n\nimport useAutoResize from '../../use/autoResize'\n\nimport { randomExtend, getPointDistance, uuid } from '../../util'\n\nimport './style.less'\n\n/**\n* @description Type Declaration\n*\n* interface Halo {\n*    show?: boolean\n*    duration?: [number, number]\n*    color?: string\n*    radius?: number\n* }\n*\n* interface Text {\n*    show?: boolean\n*    offset?: [number, number]\n*    color?: string\n*    fontSize?: number\n* }\n*\n* interface Icon {\n*    show?: boolean\n*    src?: string\n*    width?: number\n*    height?: number\n* }\n*\n* interface Point {\n*    name: string\n*    coordinate: [number, number]\n*    halo?: Halo\n*    text?: Text\n*    icon?: Icon\n* }\n*\n* interface Line {\n*    width?: number\n*    color?: string\n*    orbitColor?: string\n*    duration?: [number, number]\n*    radius?: string\n* }\n*\n* interface Flyline extends Line {\n*    source: string\n*    target: string\n* }\n*\n* interface FlylineWithPath extends Flyline {\n*    d: string\n*    path: [[number, number], [number, number], [number, number]]\n*    key: string\n* }\n*/\nconst defaultConfig = {\n  /**\n   * @description Flyline chart points\n   * @type {Point[]}\n   * @default points = []\n   */\n  points: [],\n  /**\n   * @description Lines\n   * @type {Flyline[]}\n   * @default lines = []\n   */\n  lines: [],\n  /**\n   * @description Global halo configuration\n   * @type {Halo}\n   */\n  halo: {\n    /**\n     * @description Whether to show halo\n     * @type {Boolean}\n     * @default show = false\n     */\n    show: false,\n    /**\n     * @description Halo animation duration (1s = 10)\n     * @type {[number, number]}\n     */\n    duration: [20, 30],\n    /**\n     * @description Halo color\n     * @type {String}\n     * @default color = '#fb7293'\n     */\n    color: '#fb7293',\n    /**\n     * @description Halo radius\n     * @type {Number}\n     * @default radius = 120\n     */\n    radius: 120\n  },\n  /**\n   * @description Global text configuration\n   * @type {Text}\n   */\n  text: {\n    /**\n     * @description Whether to show text\n     * @type {Boolean}\n     * @default show = false\n     */\n    show: false,\n    /**\n     * @description Text offset\n     * @type {[number, number]}\n     * @default offset = [0, 15]\n     */\n    offset: [0, 15],\n    /**\n     * @description Text color\n     * @type {String}\n     * @default color = '#ffdb5c'\n     */\n    color: '#ffdb5c',\n    /**\n     * @description Text font size\n     * @type {Number}\n     * @default fontSize = 12\n     */\n    fontSize: 12\n  },\n  /**\n   * @description Global icon configuration\n   * @type {Icon}\n   */\n  icon: {\n    /**\n     * @description Whether to show icon\n     * @type {Boolean}\n     * @default show = false\n     */\n    show: false,\n    /**\n     * @description Icon src\n     * @type {String}\n     * @default src = ''\n     */\n    src: '',\n    /**\n     * @description Icon width\n     * @type {Number}\n     * @default width = 15\n     */\n    width: 15,\n    /**\n     * @description Icon height\n     * @type {Number}\n     * @default width = 15\n     */\n    height: 15\n  },\n  /**\n   * @description Global line configuration\n   * @type {Line}\n   */\n  line: {\n    /**\n     * @description Line width\n     * @type {Number}\n     * @default width = 1\n     */\n    width: 1,\n    /**\n     * @description Flyline color\n     * @type {String}\n     * @default color = '#ffde93'\n     */\n    color: '#ffde93',\n    /**\n     * @description Orbit color\n     * @type {String}\n     * @default orbitColor = 'rgba(103, 224, 227, .2)'\n     */\n    orbitColor: 'rgba(103, 224, 227, .2)',\n    /**\n     * @description Flyline animation duration\n     * @type {[number, number]}\n     * @default duration = [20, 30]\n     */\n    duration: [20, 30],\n    /**\n     * @description Flyline radius\n     * @type {Number}\n     * @default radius = 100\n     */\n    radius: 100\n  },\n  /**\n   * @description Back ground image url\n   * @type {String}\n   * @default bgImgSrc = ''\n   */\n  bgImgSrc: '',\n  /**\n   * @description K value\n   * @type {Number}\n   * @default k = -0.5\n   * @example k = -1 ~ 1\n   */\n  k: -0.5,\n  /**\n   * @description Flyline curvature\n   * @type {Number}\n   * @default curvature = 5\n   */\n  curvature: 5,\n  /**\n   * @description Relative points position\n   * @type {Boolean}\n   * @default relative = true\n   */\n  relative: true\n}\n\nfunction getKLinePointByx(k, [lx, ly], x) {\n  const y = ly - k * lx + k * x\n\n  return [x, y]\n}\n\nconst FlyLineChartEnhanced = forwardRef(({ config = {}, dev = false, className, style }, ref) => {\n  const { width, height, domRef } = useAutoResize(ref)\n\n  const { unique, flylineGradientId, haloGradientId } = useRef({\n    unique: Math.random(),\n    flylineGradientId: `flyline-gradient-id-${uuid()}`,\n    haloGradientId: `halo-gradient-id-${uuid()}`\n  }).current\n\n  const { mergedConfig, flylinePoints, flylines } = useMemo(calcData, [\n    config,\n    width,\n    height\n  ])\n\n  const [flylineLengths, setFlylineLengths] = useState([])\n\n  const pathDomRef = useRef([])\n\n  function calcData() {\n    const mergedConfig = getMergedConfig()\n\n    const flylinePoints = getFlylinePoints(mergedConfig)\n\n    const flylines = getLinePaths(mergedConfig)\n\n    return { mergedConfig, flylinePoints, flylines }\n  }\n\n  function getMergedConfig() {\n    const mergedConfig = deepMerge(deepClone(defaultConfig, true), config || {})\n    const { points, lines, halo, text, icon, line } = mergedConfig\n\n    mergedConfig.points = points.map(item => {\n      item.halo = deepMerge(deepClone(halo, true), item.halo || {})\n      item.text = deepMerge(deepClone(text, true), item.text || {})\n      item.icon = deepMerge(deepClone(icon, true), item.icon || {})\n      return item\n    })\n\n    mergedConfig.lines = lines.map(item => deepMerge(deepClone(line, true), item))\n\n    return mergedConfig\n  }\n\n  function getFlylinePoints(mergedConfig) {\n    const { relative, points } = mergedConfig\n\n    return points.map((item, i) => {\n      const { coordinate: [x, y], halo, icon, text } = item\n\n      if (relative) item.coordinate = [x * width, y * height]\n\n      item.halo.time = randomExtend(...halo.duration) / 10\n\n      const { width: iw, height: ih } = icon\n      item.icon.x = item.coordinate[0] - iw / 2\n      item.icon.y = item.coordinate[1] - ih / 2\n\n      const [ox, oy] = text.offset\n      item.text.x = item.coordinate[0] + ox\n      item.text.y = item.coordinate[1] + oy\n      item.key = `${item.coordinate.toString()}${i}`\n\n      return item\n    })\n  }\n\n  function getLinePaths(mergedConfig) {\n    const { points, lines } = mergedConfig\n\n    return lines.map(item => {\n      const { source, target, duration } = item\n      const sourcePoint = points.find(({ name }) => name === source).coordinate\n      const targetPoint = points.find(({ name }) => name === target).coordinate\n      const path = getPath(sourcePoint, targetPoint, mergedConfig).map(item => item.map(v => parseFloat(v.toFixed(10))))\n      const d = `M${path[0].toString()} Q${path[1].toString()} ${path[2].toString()}`\n      const key = `path${path.toString()}`\n      const time = randomExtend(...duration) / 10\n\n      return { ...item, path, key, d, time }\n    })\n  }\n\n  function getPath(start, end, mergedConfig) {\n    const controlPoint = getControlPoint(start, end, mergedConfig)\n\n    return [start, controlPoint, end]\n  }\n\n  function getControlPoint([sx, sy], [ex, ey], { curvature, k }) {\n    const [mx, my] = [(sx + ex) / 2, (sy + ey) / 2]\n    const distance = getPointDistance([sx, sy], [ex, ey])\n    const targetLength = distance / curvature\n    const disDived = targetLength / 2\n    let [dx, dy] = [mx, my]\n\n    do {\n      dx += disDived\n      dy = getKLinePointByx(k, [mx, my], dx)[1]\n    } while (getPointDistance([mx, my], [dx, dy]) < targetLength)\n\n    return [dx, dy]\n  }\n\n  const consoleClickPos = useCallback(({ offsetX, offsetY }) => {\n    if (!dev) return\n\n    const relativeX = (offsetX / width).toFixed(2)\n    const relativeY = (offsetY / height).toFixed(2)\n\n    console.warn(`dv-flyline-chart-enhanced DEV: \\n Click Position is [${offsetX}, ${offsetY}] \\n Relative Position is [${relativeX}, ${relativeY}]`)\n  }, [width, height, dev])\n\n  useEffect(() => {\n    const lengths = flylines.map((foo, i) =>\n      pathDomRef.current[i].getTotalLength()\n    )\n\n    setFlylineLengths(lengths)\n  }, [flylines])\n\n  const classNames = useMemo(() => classnames('dv-flyline-chart-enhanced', className), [\n    className\n  ])\n\n  return (\n    <div\n      className={classNames}\n      ref={domRef}\n      style={{ backgroundImage: `url(${mergedConfig ? mergedConfig.bgImgSrc : ''})`, ...style }}\n      onClick={consoleClickPos}\n    >\n      {\n        flylines.length && (\n          <svg width={width} height={height}>\n            <defs>\n              <radialGradient\n                id={flylineGradientId}\n                cx='50%' cy='50%' r='50%'\n              >\n                <stop\n                  offset='0%' stopColor='#fff'\n                  stopOpacity='1'\n                />\n                <stop\n                  offset='100%' stopColor='#fff'\n                  stopOpacity='0'\n                />\n              </radialGradient>\n\n              <radialGradient\n                id={haloGradientId}\n                cx='50%' cy='50%' r='50%'\n              >\n                <stop\n                  offset='0%' stopColor='#fff'\n                  stopOpacity='0'\n                />\n                <stop\n                  offset='100%' stopColor='#fff'\n                  stopOpacity='1'\n                />\n              </radialGradient>\n            </defs >\n\n            {/* points */}\n            {\n              flylinePoints.map((point, i) => (\n                <g key={i}>\n                  <defs>\n                    {\n                      point.halo.show &&\n                      <circle\n                        id={`halo${unique}${point.key}`}\n                        cx={point.coordinate[0]}\n                        cy={point.coordinate[1]}\n                      >\n                        <animate\n                          attributeName='r'\n                          values={`1;${point.halo.radius}`}\n                          dur={`${point.halo.time}s`}\n                          repeatCount='indefinite'\n                        />\n                        <animate\n                          attributeName='opacity'\n                          values='1;0'\n                          dur={`${point.halo.time}s`}\n                          repeatCount='indefinite'\n                        />\n                      </circle>\n                    }\n                  </defs>\n\n                  {/* halo gradient mask */}\n                  <mask id={`mask${unique}${point.key}`}>\n                    {\n                      point.halo.show && <use\n                        href={`#halo${unique}${point.key}`}\n                        fill={`url(#${haloGradientId})`}\n                      />\n                    }\n                  </mask>\n\n                  {/* point halo */}\n                  {\n                    point.halo.show && <use\n                      href={`#halo${unique}${point.key}`}\n                      fill={point.halo.color}\n                      mask={`url(#mask${unique}${point.key})`}\n                    />\n                  }\n\n                  {/* point icon */}\n                  {\n                    point.icon.show && <image\n                      href={point.icon.src}\n                      width={point.icon.width}\n                      height={point.icon.height}\n                      x={point.icon.x}\n                      y={point.icon.y}\n                    />\n                  }\n\n                  {/* point text */}\n                  {\n                    point.text.show && <text\n                      style={{ fontSize: `${point.text.fontSize}px`, color: `${point.text.color}` }}\n                      fill={point.text.color}\n                      x={point.text.x}\n                      y={point.text.y}\n                    >\n                      {point.name}\n                    </text>\n                  }\n                </g >\n              ))\n            }\n\n            {/* flylines */}\n            {\n              flylines.map((line, i) => (\n                <g key={i}>\n                  <defs>\n                    <path\n                      id={line.key}\n                      ref={e => (pathDomRef.current[i] = e)}\n                      d={line.d}\n                      fill='transparent'\n                    />\n                  </defs>\n\n                  {/* orbit line */}\n                  <use\n                    href={`#${line.key}`}\n                    strokeWidth={line.width}\n                    stroke={line.orbitColor}\n                  />\n\n                  {/* fly line gradient mask */}\n                  <mask id={`mask${unique}${line.key}`}>\n                    <circle cx='0' cy='0' r={line.radius} fill={`url(#${flylineGradientId})`}>\n                      <animateMotion\n                        dur={line.time}\n                        path={line.d}\n                        rotate='auto'\n                        repeatCount='indefinite'\n                      />\n                    </circle>\n                  </mask >\n\n                  {/* fly line */}\n                  {\n                    flylineLengths[i] && <use\n                      href={`#${line.key}`}\n                      strokeWidth={line.width}\n                      stroke={line.color}\n                      mask={`url(#mask${unique}${line.key})`}\n                    >\n                      <animate\n                        attributeName='stroke-dasharray'\n                        from={`0, ${flylineLengths[i]}`}\n                        to={`${flylineLengths[i]}, 0`}\n                        dur={line.time}\n                        repeatCount='indefinite'\n                      />\n                    </use>\n                  }\n\n                </g>\n              ))\n            }\n          </svg>\n        )\n      }\n    </div>\n  )\n})\n\nFlyLineChartEnhanced.propTypes = {\n  config: PropTypes.object,\n  dev: PropTypes.bool,\n  className: PropTypes.string,\n  style: PropTypes.object\n}\n\n// 指定 props 的默认值：\nFlyLineChartEnhanced.defaultProps = {\n  dev: false\n}\n\nexport default FlyLineChartEnhanced\n"],"names":["defaultConfig","points","lines","halo","show","duration","color","radius","text","offset","fontSize","icon","src","width","height","line","orbitColor","bgImgSrc","k","curvature","relative","getKLinePointByx","x","lx","ly","y","FlyLineChartEnhanced","forwardRef","ref","config","dev","className","style","useAutoResize","domRef","useRef","unique","Math","random","flylineGradientId","uuid","haloGradientId","current","useMemo","calcData","mergedConfig","flylinePoints","flylines","useState","flylineLengths","setFlylineLengths","pathDomRef","getMergedConfig","getFlylinePoints","getLinePaths","deepMerge","deepClone","map","item","i","coordinate","time","randomExtend","iw","ih","ox","oy","key","toString","source","target","sourcePoint","find","name","targetPoint","path","getPath","parseFloat","v","toFixed","d","start","end","controlPoint","getControlPoint","sx","sy","ex","ey","mx","my","distance","getPointDistance","targetLength","disDived","dx","dy","consoleClickPos","useCallback","offsetX","offsetY","relativeX","relativeY","console","warn","useEffect","lengths","foo","getTotalLength","classNames","classnames","React","backgroundImage","length","point","e","propTypes","PropTypes","object","bool","string","defaultProps"],"mappings":"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"}