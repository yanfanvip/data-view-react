{"version":3,"file":"index.js","sources":["../../src/components/scrollBoard/index.js"],"sourcesContent":["import React, { useEffect, useState, useRef, useMemo, forwardRef } from 'react'\n\nimport PropTypes from 'prop-types'\n\nimport classnames from 'classnames'\n\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\n\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\n\nimport useAutoResize from '../../use/autoResize'\nimport { co } from '../../util'\n\nimport './style.less'\n\nconst defaultConfig = {\n  /**\n   * @description Board header\n   * @type {Array<String>}\n   * @default header = []\n   * @example header = ['column1', 'column2', 'column3']\n   */\n  header: [],\n  /**\n   * @description Board data\n   * @type {Array<Array>}\n   * @default data = []\n   */\n  data: [],\n  /**\n   * @description Row num\n   * @type {Number}\n   * @default rowNum = 5\n   */\n  rowNum: 5,\n  /**\n   * @description Header background color\n   * @type {String}\n   * @default headerBGC = '#00BAFF'\n   */\n  headerBGC: '#00BAFF',\n  /**\n   * @description Odd row background color\n   * @type {String}\n   * @default oddRowBGC = '#003B51'\n   */\n  oddRowBGC: '#003B51',\n  /**\n   * @description Even row background color\n   * @type {String}\n   * @default evenRowBGC = '#003B51'\n   */\n  evenRowBGC: '#0A2732',\n  /**\n   * @description Scroll wait time\n   * @type {Number}\n   * @default waitTime = 2000\n   */\n  waitTime: 2000,\n  /**\n   * @description Header height\n   * @type {Number}\n   * @default headerHeight = 35\n   */\n  headerHeight: 35,\n  /**\n   * @description Column width\n   * @type {Array<Number>}\n   * @default columnWidth = []\n   */\n  columnWidth: [],\n  /**\n   * @description Column align\n   * @type {Array<String>}\n   * @default align = []\n   * @example align = ['left', 'center', 'right']\n   */\n  align: [],\n  /**\n   * @description Show index\n   * @type {Boolean}\n   * @default index = false\n   */\n  index: false,\n  /**\n   * @description index Header\n   * @type {String}\n   * @default indexHeader = '#'\n   */\n  indexHeader: '#',\n  /**\n   * @description Carousel type\n   * @type {String}\n   * @default carousel = 'single'\n   * @example carousel = 'single' | 'page'\n   */\n  carousel: 'single',\n  /**\n   * @description Pause scroll when mouse hovered\n   * @type {Boolean}\n   * @default hoverPause = true\n   * @example hoverPause = true | false\n   */\n  hoverPause: true\n}\n\nfunction calcHeaderData({ header, index, indexHeader }) {\n  if (!header.length) {\n    return []\n  }\n\n  header = [...header]\n\n  if (index) header.unshift(indexHeader)\n\n  return header\n}\n\nfunction calcRows({ data, index, headerBGC, rowNum }) {\n  if (index) {\n    data = data.map((row, i) => {\n      row = [...row]\n\n      const indexTag = `<span class=\"index\" style=\"background-color: ${headerBGC};\">${i +\n        1}</span>`\n\n      row.unshift(indexTag)\n\n      return row\n    })\n  }\n\n  data = data.map((ceils, i) => ({ ceils, rowIndex: i }))\n\n  const rowLength = data.length\n\n  if (rowLength > rowNum && rowLength < 2 * rowNum) {\n    data = [...data, ...data]\n  }\n\n  return data.map((d, i) => ({ ...d, scroll: i }))\n}\n\nfunction calcAligns(mergedConfig, header) {\n  const columnNum = header.length\n\n  let aligns = new Array(columnNum).fill('left')\n\n  const { align } = mergedConfig\n\n  return deepMerge(aligns, align)\n}\n\nconst ScrollBoard = forwardRef(({ onClick, config = {}, className, style, onMouseOver }, ref) => {\n  const { width, height, domRef } = useAutoResize(ref)\n\n  const [state, setState] = useState({\n    mergedConfig: null,\n\n    header: [],\n\n    rows: [],\n\n    widths: [],\n\n    heights: [],\n\n    aligns: []\n  })\n\n  const { mergedConfig, header, rows, widths, heights, aligns } = state\n\n  const stateRef = useRef({\n    ...state,\n    rowsData: [],\n    avgHeight: 0,\n    animationIndex: 0\n  })\n\n  Object.assign(stateRef.current, state)\n\n  function onResize() {\n    if (!mergedConfig) return\n\n    const widths = calcWidths(mergedConfig, stateRef.current.rowsData)\n\n    const heights = calcHeights(mergedConfig, header)\n\n    const data = { widths, heights }\n\n    Object.assign(stateRef.current, data)\n    setState(state => ({ ...state, ...data }))\n  }\n\n  function calcData() {\n    const mergedConfig = deepMerge(\n      deepClone(defaultConfig, true),\n      config || {}\n    )\n\n    const header = calcHeaderData(mergedConfig)\n\n    const rows = calcRows(mergedConfig)\n\n    const widths = calcWidths(mergedConfig, stateRef.current.rowsData)\n\n    const heights = calcHeights(mergedConfig, header)\n\n    const aligns = calcAligns(mergedConfig, header)\n\n    const data = {\n      mergedConfig,\n      header,\n      rows,\n      widths,\n      aligns,\n      heights\n    }\n\n    Object.assign(stateRef.current, data, {\n      rowsData: rows,\n      animationIndex: 0\n    })\n\n    setState(state => ({ ...state, ...data }))\n  }\n\n  function calcWidths({ columnWidth, header }, rowsData) {\n    const usedWidth = columnWidth.reduce((all, w) => all + w, 0)\n\n    let columnNum = 0\n    if (rowsData[0]) {\n      columnNum = rowsData[0].ceils.length\n    } else if (header.length) {\n      columnNum = header.length\n    }\n\n    const avgWidth = (width - usedWidth) / (columnNum - columnWidth.length)\n\n    const widths = new Array(columnNum).fill(avgWidth)\n\n    return deepMerge(widths, columnWidth)\n  }\n\n  function calcHeights({ headerHeight, rowNum, data }, header) {\n    let allHeight = height\n\n    if (header.length) allHeight -= headerHeight\n\n    const avgHeight = allHeight / rowNum\n\n    Object.assign(stateRef.current, { avgHeight })\n\n    return new Array(data.length).fill(avgHeight)\n  }\n\n  function * animation(start = false) {\n    let {\n      avgHeight,\n      animationIndex,\n      mergedConfig: { waitTime, carousel, rowNum },\n      rowsData\n    } = stateRef.current\n\n    const rowLength = rowsData.length\n\n    if (start) yield new Promise(resolve => setTimeout(resolve, waitTime))\n\n    const animationNum = carousel === 'single' ? 1 : rowNum\n\n    let rows = rowsData.slice(animationIndex)\n    rows.push(...rowsData.slice(0, animationIndex))\n    rows = rows.slice(0, carousel === 'page' ? rowNum * 2 : rowNum + 1)\n\n    const heights = new Array(rowLength).fill(avgHeight)\n    setState(state => ({ ...state, rows, heights }))\n\n    yield new Promise(resolve => setTimeout(resolve, 300))\n\n    animationIndex += animationNum\n\n    const back = animationIndex - rowLength\n    if (back >= 0) animationIndex = back\n\n    const newHeights = [...heights]\n    newHeights.splice(0, animationNum, ...new Array(animationNum).fill(0))\n\n    Object.assign(stateRef.current, { animationIndex })\n    setState(state => ({ ...state, heights: newHeights }))\n  }\n\n  function emitEvent(handle, ri, ci, row, ceil) {\n    const { ceils, rowIndex } = row\n\n    handle && handle({ row: ceils, ceil, rowIndex, columnIndex: ci })\n  }\n\n  function handleHover(enter, ri, ci, row, ceil) {\n    if (enter) emitEvent(onMouseOver, ri, ci, row, ceil)\n\n    if (!mergedConfig.hoverPause) return\n\n    const { pause, resume } = task.current\n\n    enter && pause && resume ? pause() : resume()\n  }\n\n  const getBackgroundColor = rowIndex =>\n    mergedConfig[rowIndex % 2 === 0 ? 'evenRowBGC' : 'oddRowBGC']\n\n  const task = useRef({})\n\n  useEffect(() => {\n    calcData()\n\n    let start = true\n\n    function * loop() {\n      while (true) {\n        yield * animation(start)\n\n        start = false\n\n        const { waitTime } = stateRef.current.mergedConfig\n\n        yield new Promise(resolve => setTimeout(resolve, waitTime - 300))\n      }\n    }\n\n    const {\n      mergedConfig: { rowNum },\n      rows: rowsData\n    } = stateRef.current\n\n    const rowLength = rowsData.length\n\n    if (rowNum >= rowLength) return\n\n    task.current = co(loop)\n\n    return task.current.end\n  }, [config, domRef.current])\n\n  useEffect(onResize, [width, height, domRef.current])\n\n  const classNames = useMemo(() => classnames('dv-scroll-board', className), [\n    className\n  ])\n\n  return (\n    <div className={classNames} style={style} ref={domRef}>\n      {!!header.length && !!mergedConfig && (\n        <div\n          className='header'\n          style={{ backgroundColor: `${mergedConfig.headerBGC}` }}\n        >\n          {header.map((headerItem, i) => (\n            <div\n              className='header-item'\n              key={`${headerItem}-${i}`}\n              style={{\n                height: `${mergedConfig.headerHeight}px`,\n                lineHeight: `${mergedConfig.headerHeight}px`,\n                width: `${widths[i]}px`\n              }}\n              align={aligns[i]}\n              dangerouslySetInnerHTML={{ __html: headerItem }}\n            />\n          ))}\n        </div>\n      )}\n\n      {!!mergedConfig && (\n        <div\n          className='rows'\n          style={{\n            height: `${height -\n              (header.length ? mergedConfig.headerHeight : 0)}px`\n          }}\n        >\n          {rows.map((row, ri) => (\n            <div\n              className='row-item'\n              key={`${row.toString()}-${row.scroll}`}\n              style={{\n                height: `${heights[ri]}px`,\n                lineHeight: `${heights[ri]}px`,\n                backgroundColor: `${getBackgroundColor(row.rowIndex)}`\n              }}\n            >\n              {row.ceils.map((ceil, ci) => (\n                <div\n                  className='ceil'\n                  key={`${ceil}-${ri}-${ci}`}\n                  style={{ width: `${widths[ci]}px` }}\n                  align={aligns[ci]}\n                  dangerouslySetInnerHTML={{ __html: ceil }}\n                  onClick={() => emitEvent(onClick, ri, ci, row, ceil)}\n                  onMouseEnter={() => handleHover(true, ri, ci, row, ceil)}\n                  onMouseLeave={() => handleHover(false)}\n                />\n              ))}\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  )\n})\n\nScrollBoard.propTypes = {\n  config: PropTypes.object,\n  onClick: PropTypes.func,\n  onMouseOver: PropTypes.func,\n  className: PropTypes.string,\n  style: PropTypes.object\n}\n\nexport default ScrollBoard\n"],"names":["defaultConfig","header","data","rowNum","headerBGC","oddRowBGC","evenRowBGC","waitTime","headerHeight","columnWidth","align","index","indexHeader","carousel","hoverPause","calcHeaderData","length","unshift","calcRows","map","row","i","indexTag","ceils","rowIndex","rowLength","d","scroll","calcAligns","mergedConfig","columnNum","aligns","Array","fill","deepMerge","ScrollBoard","forwardRef","ref","onClick","config","className","style","onMouseOver","animation","useAutoResize","width","height","domRef","useState","rows","widths","heights","state","setState","stateRef","useRef","rowsData","avgHeight","animationIndex","Object","assign","current","onResize","calcWidths","calcHeights","calcData","deepClone","usedWidth","reduce","all","w","avgWidth","allHeight","start","Promise","setTimeout","resolve","animationNum","slice","push","back","newHeights","splice","emitEvent","handle","ri","ci","ceil","columnIndex","handleHover","enter","task","pause","resume","getBackgroundColor","useEffect","loop","co","end","classNames","useMemo","classnames","React","backgroundColor","headerItem","lineHeight","__html","toString","propTypes","PropTypes","object","func","string"],"mappings":"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"}