{"version":3,"file":"index.js","sources":["../../src/components/decoration12/index.js"],"sourcesContent":["import React, { useMemo, forwardRef, useRef } from 'react'\n\nimport PropTypes from 'prop-types'\n\nimport classnames from 'classnames'\n\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\nimport { deepClone, getCircleRadianPoint } from '@jiaminghi/c-render/lib/plugin/util'\nimport { fade } from '@jiaminghi/color'\n\nimport useAutoResize from '../../use/autoResize'\nimport { uuid } from '../../util'\n\nimport './style.less'\n\nconst defaultColor = ['#2783ce', '#2cf7fe']\n\nconst segment = 30\n\nconst sectorAngle = Math.PI / 3\n\nconst ringNum = 3\n\nconst ringWidth = 1\n\nconst showSplitLine = true\n\nconst BorderBox = forwardRef(({ children, className, style, color = [], scanDur = 3, haloDur = 2 }, ref) => {\n  const { width, height, domRef } = useAutoResize(ref)\n\n  const x = width / 2\n\n  const y = height / 2\n\n  const mergedColor = useMemo(() => deepMerge(deepClone(defaultColor, true), color || []), [color])\n\n  const pathD = useMemo(() => {\n    const startAngle = -Math.PI / 2\n    const angleGap = sectorAngle / segment\n    const r = width / 4\n    let lastEndPoints = getCircleRadianPoint(x, y, r, startAngle)\n\n    return new Array(segment)\n      .fill('')\n      .map((_, i) => {\n        const endPoints = getCircleRadianPoint(x, y, r, startAngle - (i + 1) * angleGap).map(_ => _.toFixed(5))\n        const d = `M${lastEndPoints.join(',')} A${r}, ${r} 0 0 0 ${endPoints.join(',')}`\n        lastEndPoints = endPoints\n        return d\n      })\n  }, [x, y, width])\n\n  const pathColor = useMemo(() => {\n    const color = mergedColor[0]\n    const colorGap = 100 / (segment - 1)\n\n    return new Array(segment)\n      .fill(color)\n      .map((_, i) => fade(color, 100 - i * colorGap))\n  }, [mergedColor])\n\n  const circleR = useMemo(() => {\n    const radiusGap = (width / 2 - ringWidth / 2) / ringNum\n\n    return new Array(ringNum)\n      .fill(0)\n      .map((_, i) => radiusGap * (i + 1))\n  }, [width])\n\n  const splitLinePoints = useMemo(() => {\n    const angleGap = Math.PI / 6\n    const r = width / 2\n    return new Array(6)\n      .fill('')\n      .map((_, i) => {\n        const startAngle = angleGap * (i + 1)\n        const endAngle = startAngle + Math.PI\n        const startPoint = getCircleRadianPoint(x, y, r, startAngle)\n        const endPoint = getCircleRadianPoint(x, y, r, endAngle)\n        return `${startPoint.join(',')} ${endPoint.join(',')}`\n      })\n  }, [x, y, width])\n\n  const arcD = useMemo(() => {\n    const angleGap = Math.PI / 6\n    const r = width / 2 - 1\n\n    return new Array(4)\n      .fill('')\n      .map((_, i) => {\n        const startAngle = angleGap * (3 * i + 1)\n        const endAngle = startAngle + angleGap\n        const startPoint = getCircleRadianPoint(x, y, r, startAngle)\n        const endPoint = getCircleRadianPoint(x, y, r, endAngle)\n        return `M${startPoint.join(',')} A${x}, ${y} 0 0 1 ${endPoint.join(',')}`\n      })\n  }, [x, y, width])\n\n  const idRef = useRef({\n    gId: `decoration-12-g-${uuid()}`,\n    gradientId: `decoration-12-gradient-${uuid()}`\n  })\n\n  const classNames = useMemo(() => classnames('dv-decoration-12', className), [\n    className\n  ])\n\n  return (\n    <div className={classNames} style={style} ref={domRef}>\n      <svg width={width} height={height}>\n        <defs>\n          <g id={idRef.current.gId}>\n            {\n              pathD.map((d, i) => <path\n                stroke={pathColor[i]}\n                strokeWidth={width / 2}\n                fill='transparent'\n                key={d}\n                d={d}\n              />)\n            }\n          </g>\n\n          <radialGradient\n            id={idRef.current.gradientId}\n            cx='50%' cy='50%' r='50%'\n          >\n            <stop offset='0%' stopColor='transparent' stopOpacity='1' />\n            <stop offset='100%' stopColor={fade(mergedColor[1] || defaultColor[1], 30)} stopOpacity='1' />\n          </radialGradient>\n        </defs>\n\n        {\n          circleR.map(r => <circle\n            key={r}\n            r={r}\n            cx={x}\n            cy={y}\n            stroke={mergedColor[1]}\n            strokeWidth={0.5}\n            fill='transparent'\n          />)\n        }\n\n        <circle\n          r='1'\n          cx={x}\n          cy={y}\n          stroke='transparent'\n          fill={`url(#${idRef.current.gradientId})`}\n        >\n          <animate\n            attributeName='r'\n            values={`1;${width / 2}`}\n            dur={`${haloDur}s`}\n            repeatCount='indefinite'\n          />\n          <animate\n            attributeName='opacity'\n            values='1;0'\n            dur={`${haloDur}s`}\n            repeatCount='indefinite'\n          />\n        </circle>\n\n        <circle\n          r='2'\n          cx={x}\n          cy={y}\n          fill={mergedColor[1]}\n        />\n\n        {\n          showSplitLine && <g>\n            {\n              splitLinePoints.map(p => <polyline\n                key={p}\n                points={p}\n                stroke={mergedColor[1]}\n                strokeWidth={0.5}\n                opacity='0.5'\n              />)\n            }\n\n          </g>\n        }\n\n        {\n          arcD.map(d => <path\n            key={d}\n            d={d}\n            stroke={mergedColor[1]}\n            strokeWidth='2'\n            fill='transparent'\n          />)\n        }\n\n        <use href={`#${idRef.current.gId}`}>\n          <animateTransform\n            attributeName='transform'\n            type='rotate'\n            values={`0, ${x} ${y};360, ${x} ${y}`}\n            dur={`${scanDur}s`}\n            repeatCount='indefinite'\n          />\n        </use>\n      </svg>\n\n      <div className='decoration-content'>\n        {children}\n      </div>\n    </div>\n  )\n})\n\nBorderBox.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  style: PropTypes.object,\n  color: PropTypes.array,\n  scanDur: PropTypes.number,\n  haloDur: PropTypes.number\n}\n\nexport default BorderBox\n"],"names":["defaultColor","segment","sectorAngle","Math","PI","ringNum","ringWidth","BorderBox","forwardRef","ref","children","className","style","color","scanDur","haloDur","useAutoResize","width","height","domRef","x","y","mergedColor","useMemo","deepMerge","deepClone","pathD","startAngle","angleGap","r","lastEndPoints","getCircleRadianPoint","Array","fill","map","_","i","endPoints","toFixed","d","join","pathColor","colorGap","fade","circleR","radiusGap","splitLinePoints","endAngle","startPoint","endPoint","arcD","idRef","useRef","gId","uuid","gradientId","classNames","classnames","React","current","showSplitLine","p","propTypes","PropTypes","node","string","object","array","number"],"mappings":"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"}