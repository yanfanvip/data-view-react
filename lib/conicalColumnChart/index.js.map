{"version":3,"file":"index.js","sources":["../../src/components/conicalColumnChart/index.js"],"sourcesContent":["import React, { useMemo, forwardRef } from 'react'\n\nimport PropTypes from 'prop-types'\n\nimport classnames from 'classnames'\n\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\n\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\n\nimport useAutoResize from '../../use/autoResize'\n\nimport './style.less'\n\nconst defaultConfig = {\n  /**\n   * @description Chart data\n   * @type {Array<Object>}\n   * @default data = []\n   */\n  data: [],\n  /**\n   * @description Chart img\n   * @type {Array<String>}\n   * @default img = []\n   */\n  img: [],\n  /**\n   * @description Chart font size\n   * @type {Number}\n   * @default fontSize = 12\n   */\n  fontSize: 12,\n  /**\n   * @description Img side length\n   * @type {Number}\n   * @default imgSideLength = 30\n   */\n  imgSideLength: 30,\n  /**\n   * @description Column color\n   * @type {String}\n   * @default columnColor = 'rgba(0, 194, 255, 0.4)'\n   */\n  columnColor: 'rgba(0, 194, 255, 0.4)',\n  /**\n   * @description Text color\n   * @type {String}\n   * @default textColor = '#fff'\n   */\n  textColor: '#fff',\n  /**\n   * @description Show value\n   * @type {Boolean}\n   * @default showValue = false\n   */\n  showValue: false\n}\n\nfunction getData(mergedConfig) {\n  let { data } = mergedConfig\n\n  data = deepClone(data, true)\n\n  data.sort(({ value: a }, { value: b }) => {\n    if (a > b) return -1\n    if (a < b) return 1\n    if (a === b) return 0\n  })\n\n  const max = data[0] ? data[0].value : 10\n\n  data = data.map(item => ({\n    ...item,\n    percent: item.value / max\n  }))\n\n  return data\n}\n\nconst ConicalColumnChart = forwardRef(({ config = {}, className, style }, ref) => {\n  const { width, height, domRef } = useAutoResize(ref)\n\n  const { mergedConfig, column } = useMemo(calcData, [config, width, height])\n\n  function calcData() {\n    const mergedConfig = deepMerge(deepClone(defaultConfig, true), config || {})\n\n    mergedConfig.data = getData(mergedConfig)\n\n    return { mergedConfig, column: getColumn(mergedConfig) }\n  }\n\n  function getColumn(mergedConfig) {\n    const { imgSideLength, fontSize, data } = mergedConfig\n\n    const itemNum = data.length\n    const gap = width / (itemNum + 1)\n\n    const useAbleHeight = height - imgSideLength - fontSize - 5\n    const svgBottom = height - fontSize - 5\n\n    return data.map((item, i) => {\n      const { percent } = item\n\n      const middleXPos = gap * (i + 1)\n      const leftXPos = gap * i\n      const rightXpos = gap * (i + 2)\n\n      const middleYPos = svgBottom - useAbleHeight * percent\n      const controlYPos = useAbleHeight * percent * 0.6 + middleYPos\n\n      const d = `\n        M${leftXPos}, ${svgBottom}\n        Q${middleXPos}, ${controlYPos} ${middleXPos},${middleYPos}\n        M${middleXPos},${middleYPos}\n        Q${middleXPos}, ${controlYPos} ${rightXpos},${svgBottom}\n        L${leftXPos}, ${svgBottom}\n        Z\n      `\n\n      const textY = (svgBottom + middleYPos) / 2 + fontSize / 2\n\n      return {\n        ...item,\n        d,\n        x: middleXPos,\n        y: middleYPos,\n        textY\n      }\n    })\n  }\n\n  const classNames = useMemo(\n    () => classnames('dv-conical-column-chart', className),\n    [className]\n  )\n\n  return (\n    <div className={classNames} style={style} ref={domRef}>\n      <svg width={width} height={height}>\n        {column.map((item, i) => (\n          <g key={i}>\n            <path d={item.d} fill={mergedConfig.columnColor} />\n            <text\n              style={{ fontSize: `${mergedConfig.fontSize}px` }}\n              fill={mergedConfig.textColor}\n              x={item.x}\n              y={height - 4}\n            >\n              {item.name}\n            </text>\n            {!!mergedConfig.img.length && (\n              <image\n                href={mergedConfig.img[i % mergedConfig.img.length]}\n                width={mergedConfig.imgSideLength}\n                height={mergedConfig.imgSideLength}\n                x={item.x - mergedConfig.imgSideLength / 2}\n                y={item.y - mergedConfig.imgSideLength}\n              />\n            )}\n            {mergedConfig.showValue && (\n              <text\n                style={{ fontSize: `${mergedConfig.fontSize}px` }}\n                fill={mergedConfig.textColor}\n                x={item.x}\n                y={item.textY}\n              >\n                {item.value}\n              </text>\n            )}\n          </g>\n        ))}\n      </svg>\n    </div>\n  )\n})\n\nConicalColumnChart.propTypes = {\n  config: PropTypes.object,\n  className: PropTypes.string,\n  style: PropTypes.object\n}\n\nexport default ConicalColumnChart\n"],"names":["defaultConfig","data","img","fontSize","imgSideLength","columnColor","textColor","showValue","getData","mergedConfig","deepClone","sort","a","value","b","max","map","item","percent","ConicalColumnChart","forwardRef","ref","config","className","style","useAutoResize","width","height","domRef","useMemo","calcData","column","deepMerge","getColumn","itemNum","length","gap","useAbleHeight","svgBottom","i","middleXPos","leftXPos","rightXpos","middleYPos","controlYPos","d","textY","x","y","classNames","classnames","React","name","propTypes","PropTypes","object","string"],"mappings":"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"}