{"version":3,"file":"index.js","sources":["../../src/components/capsuleChart/index.js"],"sourcesContent":["import React, { useEffect, useState, useMemo } from 'react'\n\nimport PropTypes from 'prop-types'\n\nimport classnames from 'classnames'\n\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\n\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\n\nimport './style.less'\n\nconst defaultConfig = {\n  /**\n   * @description Capsule chart data\n   * @type {Array<Object>}\n   * @default data = []\n   * @example data = [{ name: 'foo1', value: 100 }, { name: 'foo2', value: 100 }]\n   */\n  data: [],\n  /**\n   * @description Colors (hex|rgb|rgba|color keywords)\n   * @type {Array<String>}\n   * @default color = ['#37a2da', '#32c5e9', '#67e0e3', '#9fe6b8', '#ffdb5c', '#ff9f7f', '#fb7293']\n   * @example color = ['#000', 'rgb(0, 0, 0)', 'rgba(0, 0, 0, 1)', 'red']\n   */\n  colors: [\n    '#37a2da',\n    '#32c5e9',\n    '#67e0e3',\n    '#9fe6b8',\n    '#ffdb5c',\n    '#ff9f7f',\n    '#fb7293'\n  ],\n  /**\n   * @description Chart unit\n   * @type {String}\n   * @default unit = ''\n   */\n  unit: '',\n  /**\n   * @description Show item value\n   * @type {Boolean}\n   * @default showValue = false\n   */\n  showValue: false\n}\n\nconst CapsuleChart = ({ config = {}, className, style }) => {\n  const [{ mergedConfig, labelData, capsuleLength, capsuleValue }, setState] = useState({\n    mergedConfig: null,\n    labelData: [],\n    capsuleLength: [],\n    capsuleValue: []\n  })\n\n  useEffect(() => {\n    const mergedConfig = deepMerge(deepClone(defaultConfig, true), config || {})\n\n    const { data } = mergedConfig\n\n    if (!data.length) return\n\n    const capsuleValue = data.map(({ value }) => value)\n\n    const maxValue = Math.max(...capsuleValue)\n\n    const oneFifth = maxValue / 5\n\n    setState({\n      mergedConfig,\n      capsuleValue,\n      capsuleLength: capsuleValue.map(v => (maxValue ? v / maxValue : 0)),\n      labelData: [...new Set(new Array(6).fill(0).map((v, i) => Math.ceil(i * oneFifth)))]\n    })\n  }, [config])\n\n  const classNames = useMemo(() => classnames('dv-capsule-chart', className), [\n    className\n  ])\n\n  return (\n    <div className={classNames} style={style}>\n      {!!mergedConfig && (\n        <React.Fragment>\n          <div className='label-column'>\n            {mergedConfig.data.map(({ name }) => (\n              <div key={name}>{name}</div>\n            ))}\n            <div>&nbsp;</div>\n          </div>\n\n          <div className='capsule-container'>\n            {capsuleLength.map((capsule, index) => (\n              <div className='capsule-item' key={index}>\n                <div\n                  className='capsule-item-column'\n                  style={{\n                    width: `${capsule * 100}%`,\n                    backgroundColor: `${\n                      mergedConfig.colors[index % mergedConfig.colors.length]\n                    }`\n                  }}\n                >\n                  {\n                    mergedConfig.showValue &&\n                      <div className='capsule-item-value'>\n                        { capsuleValue[index] }\n                      </div>\n                  }\n                </div>\n              </div>\n            ))}\n\n            <div className='unit-label'>\n              {labelData.map((label, index) => (\n                <div key={label + index}>{label}</div>\n              ))}\n            </div>\n          </div>\n\n          {!!mergedConfig.unit && (\n            <div className='unit-text'>{mergedConfig.unit}</div>\n          )}\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n\nCapsuleChart.propTypes = {\n  config: PropTypes.object,\n  className: PropTypes.string,\n  style: PropTypes.object\n}\n\nexport default CapsuleChart\n"],"names":["defaultConfig","data","colors","unit","showValue","CapsuleChart","config","className","style","useState","mergedConfig","labelData","capsuleLength","capsuleValue","setState","useEffect","deepMerge","deepClone","length","map","value","maxValue","Math","max","oneFifth","v","Set","Array","fill","i","ceil","classNames","useMemo","classnames","name","capsule","index","width","backgroundColor","label","propTypes","PropTypes","object","string"],"mappings":"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"}