{"version":3,"file":"index.js","sources":["../../src/components/decoration9/index.js"],"sourcesContent":["import React, { useRef, useMemo, forwardRef } from 'react'\n\nimport PropTypes from 'prop-types'\n\nimport classnames from 'classnames'\n\nimport { fade } from '@jiaminghi/color'\n\nimport { deepMerge } from '@jiaminghi/charts/lib/util'\n\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\n\nimport useAutoResize from '../../use/autoResize'\n\nimport { uuid } from '../../util'\n\nimport './style.less'\n\nconst defaultColor = ['rgba(3, 166, 224, 0.8)', 'rgba(3, 166, 224, 0.5)']\n\nconst svgWH = [100, 100]\n\nconst Decoration = forwardRef(({ children, className, style, color = [], dur = 3 }, ref) => {\n  const { width, height, domRef } = useAutoResize(ref)\n\n  const polygonIdRef = useRef(`decoration-9-polygon-${uuid()}`)\n\n  const mergedColor = useMemo(() => deepMerge(deepClone(defaultColor, true), color || []), [color])\n\n  const svgScale = useMemo(() => {\n    const [w, h] = svgWH\n\n    return [width / w, height / h]\n  }, [width, height])\n\n  const classNames = useMemo(() => classnames('dv-decoration-9', className), [\n    className\n  ])\n\n  return (\n    <div className={classNames} style={style} ref={domRef}>\n      <svg\n        width={`${svgWH[0]}px`}\n        height={`${svgWH[1]}px`}\n        style={{ transform: `scale(${svgScale[0]},${svgScale[1]})` }}\n      >\n        <defs>\n          <polygon\n            id={polygonIdRef.current}\n            points='15, 46.5, 21, 47.5, 21, 52.5, 15, 53.5'\n          />\n        </defs>\n\n        <circle\n          cx='50'\n          cy='50'\n          r='45'\n          fill='transparent'\n          stroke={mergedColor[1]}\n          strokeWidth='10'\n          strokeDasharray='80, 100, 30, 100'\n        >\n          <animateTransform\n            attributeName='transform'\n            type='rotate'\n            values='0 50 50;360 50 50'\n            dur={`${dur}s`}\n            repeatCount='indefinite'\n          />\n        </circle>\n\n        <circle\n          cx='50'\n          cy='50'\n          r='45'\n          fill='transparent'\n          stroke={mergedColor[0]}\n          strokeWidth='6'\n          strokeDasharray='50, 66, 100, 66'\n        >\n          <animateTransform\n            attributeName='transform'\n            type='rotate'\n            values='0 50 50;-360 50 50'\n            dur={`${dur}s`}\n            repeatCount='indefinite'\n          />\n        </circle>\n\n        <circle\n          cx='50'\n          cy='50'\n          r='38'\n          fill='transparent'\n          stroke={fade(mergedColor[1] || defaultColor[1], 30)}\n          strokeWidth='1'\n          strokeDasharray='5, 1'\n        />\n        {new Array(20).fill(0).map((foo, i) => (\n          <use\n            key={i}\n            href={`#${polygonIdRef.current}`}\n            stroke={mergedColor[1]}\n            fill={\n              Math.random() > 0.4 ? 'transparent' : mergedColor[0]\n            }\n          >\n            <animateTransform\n              attributeName='transform'\n              type='rotate'\n              values='0 50 50;360 50 50'\n              dur={`${dur}s`}\n              begin={`${i * dur / 20}s`}\n              repeatCount='indefinite'\n            />\n          </use>\n        ))}\n\n        <circle\n          cx='50'\n          cy='50'\n          r='26'\n          fill='transparent'\n          stroke={fade(mergedColor[1] || defaultColor[1], 30)}\n          strokeWidth='1'\n          strokeDasharray='5, 1'\n        />\n      </svg>\n\n      {children}\n    </div>\n  )\n})\n\nDecoration.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  style: PropTypes.object,\n  color: PropTypes.array,\n  dur: PropTypes.number\n}\n\nexport default Decoration\n"],"names":["defaultColor","svgWH","Decoration","forwardRef","ref","children","className","style","color","dur","useAutoResize","width","height","domRef","polygonIdRef","useRef","uuid","mergedColor","useMemo","deepMerge","deepClone","svgScale","w","h","classNames","classnames","transform","current","fade","Array","fill","map","foo","i","Math","random","propTypes","PropTypes","node","string","object","array","number"],"mappings":"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"}